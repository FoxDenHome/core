#!/bin/bash
set -euo pipefail

########
#
# Copyright Â© 2014-2019 Florian Pritz <bluewind@xinu.at>
# Heavily modified by Doridian
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.
#
########
#
# This is a simple mirroring script. To save bandwidth it first checks a
# timestamp via HTTP and only runs rsync when the timestamp differs from the
# local copy. As of 2016, a single rsync run without changes transfers roughly
# 6MiB of data which adds up to roughly 250GiB of traffic per month when rsync
# is run every minute. Performing a simple check via HTTP first can thus save a
# lot of traffic.

# An HTTP(S) URL pointing to the 'lastupdate' file on your chosen mirror.
# If you are a tier 1 mirror use: https://rsync.archlinux.org/lastupdate
# Otherwise use the HTTP(S) URL from your chosen mirror.

rsync_cmd() {
	rsync -rlptH \
		--safe-links \
		--delete-delay \
		--delay-updates \
		--timeout=600 \
		--contimeout=60 \
		--no-motd \
		--quiet \
		"$@"
}

force_sync="${MIRROR_FORCE_SYNC-}"

while :; do
	if [ -n "${LASTUPDATE_URL}" ]; then
		lastupdate="$(curl -fsL "${LASTUPDATE_URL}")"
		# only run when there are changes
		if [ -f "${MIRROR_TARGET}/lastupdate" ] && [ "${lastupdate}" = "$(cat "${MIRROR_TARGET}/lastupdate")" ]; then
			if [ -z "${force_sync}" ]; then
				# keep lastsync file in sync for statistics generated by the Arch Linux website
				rsync_cmd "${MIRROR_SOURCE_RSYNC}/lastsync" "${MIRROR_TARGET}/lastsync"
				echo 'Skipping update, update lastsync only'
				exit 0
			else
				echo 'MIRROR_FORCE_SYNC is set, forcing sync'
			fi
		fi
	fi

	echo 'Running main rsync...'
	rsync_cmd \
		--exclude='*.links.tar.gz*' \
		--exclude='/other' \
		--exclude='/sources' \
		--exclude='/lastupdate' \
		--exclude='/_dori-static' \
		--exclude='/.dori-local' \
		--exclude='/.well-known' \
		"${MIRROR_SOURCE_RSYNC}/" \
		"${MIRROR_TARGET}/"

	if [ -n "${LASTUPDATE_URL}" ]; then
		echo 'Updating lastupdate...'
		echo "$lastupdate" > "${MIRROR_TARGET}/lastupdate"
		echo 'Sync complete. Waiting 60 seconds to make sure lastupdate is still current'

		force_sync=''
		sleep 60
	else
		exit 0
	fi
done
